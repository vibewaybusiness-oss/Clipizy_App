"use client";

import { useState } from "react";
import Link from "next/link";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { StructuredData } from "@/components/seo/structured-data";
import {
  ChevronDown,
  ChevronUp,
  Video,
  DollarSign,
  Zap,
  Shield,
  Music,
  Clock,
  FileText,
  Share2,
  Sparkles,
  ArrowRight,
  Play,
  Check,
  Star,
  Users,
  Headphones
} from "lucide-react";

const faqCategories = [
  {
    id: "core-value",
    name: "Core Value",
    icon: Video,
    color: "text-primary",
    bgColor: "bg-primary/10"
  },
  {
    id: "monetization",
    name: "Monetization",
    icon: DollarSign,
    color: "text-green-600",
    bgColor: "bg-green-500/10"
  },
  {
    id: "pricing",
    name: "Pricing",
    icon: Star,
    color: "text-yellow-600",
    bgColor: "bg-yellow-500/10"
  },
  {
    id: "automation",
    name: "Automation",
    icon: Zap,
    color: "text-purple-600",
    bgColor: "bg-purple-500/10"
  },
  {
    id: "ip-rights",
    name: "IP & Rights",
    icon: Shield,
    color: "text-blue-600",
    bgColor: "bg-blue-500/10"
  },
  {
    id: "process",
    name: "Process",
    icon: Music,
    color: "text-pink-600",
    bgColor: "bg-pink-500/10"
  },
  {
    id: "speed",
    name: "Speed",
    icon: Clock,
    color: "text-orange-600",
    bgColor: "bg-orange-500/10"
  },
  {
    id: "input-output",
    name: "Input/Output",
    icon: FileText,
    color: "text-cyan-600",
    bgColor: "bg-cyan-500/10"
  },
  {
    id: "future",
    name: "Future",
    icon: Share2,
    color: "text-indigo-600",
    bgColor: "bg-indigo-500/10"
  },
  {
    id: "riffusion",
    name: "Riffusion",
    icon: Sparkles,
    color: "text-emerald-600",
    bgColor: "bg-emerald-500/10"
  }
];

const faqData = [
  {
    category: "core-value",
    question: "What exactly can Clipizy create?",
    answer: "Clipizy generates full-length music videos directly from your track and a simple prompt. You can choose between energy-synced Looped Animations (fast/low credit cost) or Full Scene-Based Clips with transitions and intros/outros (dynamic/higher credit cost). Every video is automatically synced to your music's structure."
  },
  {
    category: "monetization",
    question: "Can I use the generated videos commercially?",
    answer: "Yes, absolutely. All visual content generated by Clipizy comes with full Commercial Usage Rights on all paid tiers. You can monetize your music videos on YouTube, stream the audio on Spotify, and use the clips for promotional campaigns without paying extra royalties to us."
  },
  {
    category: "pricing",
    question: "Is there a free plan and how do Credits work?",
    answer: "Yes, the Free Tier gives you 60 Credits per month and allows you to generate one static video (watermarked) to test the platform. On paid tiers, you get a large bundle of credits (e.g., 1,500 with Creator), and all subsequent credit purchases share the same low rate."
  },
  {
    category: "automation",
    question: "How does the automation pipeline work?",
    answer: "Once you've perfected a template (prompts, styles, transitions), you can access the Automation pipeline (Tier 1+) to batch-generate and schedule content. Auto-upload to linked social accounts (e.g., up to 4x/day for Pro) is unlocked in the higher tiers."
  },
  {
    category: "ip-rights",
    question: "Do I keep the rights to my music, and who owns the video?",
    answer: "You always retain full and exclusive rights to your uploaded music. The AI-generated visual content is created specifically for you, and we transfer all commercial rights to you upon generation."
  },
  {
    category: "process",
    question: "How does the AI ensure the video syncs to my music?",
    answer: "This is our core technology, the AI Blueprint Analysis. Before generating, our system analyzes your track's BPM, key, harmonic shifts, and energy segments (chorus/drop). It uses this data to automatically write the technical prompts that instruct the video model to change scenes and transitions in perfect time with the music."
  },
  {
    category: "speed",
    question: "How long does it take to create a music video?",
    answer: "Simple Looped Animations usually render in under 5 minutes. Full, high-resolution, scene-based clips may take 10â€“20 minutes depending on the complexity of your prompt and our current Priority Queue status (Business tiers get faster access). You are notified when complete."
  },
  {
    category: "input-output",
    question: "What file formats are supported?",
    answer: "For music upload, we support MP3, WAV, and FLAC. Exported videos are delivered in MP4 format (up to 1080p HD, 4K available as a credit-based add-on), optimized for high quality on YouTube and other platforms."
  },
  {
    category: "future",
    question: "Which platforms can I publish to right now?",
    answer: "We support direct publishing and scheduling to YouTube. We are actively expanding to support TikTok/Instagram Reels and integrating with music distribution partners for seamless audio delivery to Spotify and Apple Music."
  },
  {
    category: "riffusion",
    question: "What is Riffusion and is it only for musicians?",
    answer: "Riffusion is our non-musician friendly feature. It allows you to describe the music you want to hear (e.g., 'A chill-hop beat with rain sounds'), and the AI will generate both the track and the visuals, making music creation accessible to anyone."
  }
];

export default function FAQPage() {
  const [expandedItems, setExpandedItems] = useState<Set<string>>(new Set());
  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);

  const toggleExpanded = (index: string) => {
    const newExpanded = new Set(expandedItems);
    if (newExpanded.has(index)) {
      newExpanded.delete(index);
    } else {
      newExpanded.add(index);
    }
    setExpandedItems(newExpanded);
  };

  const filteredFAQs = selectedCategory 
    ? faqData.filter(faq => faq.category === selectedCategory)
    : faqData;

  const faqStructuredData = {
    "@context": "https://schema.org",
    "@type": "FAQPage",
    "mainEntity": faqData.map(faq => ({
      "@type": "Question",
      "name": faq.question,
      "acceptedAnswer": {
        "@type": "Answer",
        "text": faq.answer
      }
    }))
  };

  return (
    <div className="min-h-screen">
      {/* STRUCTURED DATA */}
      <StructuredData type="faq" data={faqStructuredData} />
      
      {/* HERO SECTION */}
      <section className="relative overflow-hidden bg-gradient-to-br from-primary/10 via-accent/5 to-primary/10 dark:from-primary/20 dark:via-accent/10 dark:to-primary/20">
        <div className="absolute inset-0 bg-gradient-to-t from-background via-transparent to-background"></div>
        
        {/* Animated Background Elements */}
        <div className="absolute top-10 left-10 w-20 h-20 bg-primary/10 rounded-full blur-xl animate-pulse"></div>
        <div className="absolute bottom-10 right-10 w-32 h-32 bg-accent/10 rounded-full blur-xl animate-pulse delay-1000"></div>
        <div className="absolute top-1/2 left-1/4 w-16 h-16 bg-purple-500/10 rounded-full blur-lg animate-pulse delay-500"></div>
        
        <div className="relative container-custom py-20">
          <div className="text-center max-w-4xl mx-auto">
            <Badge className="mb-6 px-4 py-2 text-sm font-medium gradient-primary text-white">
              <FileText className="w-4 h-4 mr-2" />
              Frequently Asked Questions
            </Badge>
            
            <h1 className="text-4xl sm:text-5xl lg:text-6xl font-bold text-foreground mb-6 leading-tight">
              Everything You Need to Know About
              <span className="text-transparent bg-clip-text bg-gradient-to-r from-primary to-accent block sm:inline">
                {" "}Clipizy
              </span>
            </h1>
            
            <p className="text-lg sm:text-xl text-muted-foreground mb-8 max-w-3xl mx-auto leading-relaxed">
              Get answers to the most common questions about our AI-powered music video creation platform, 
              pricing, automation features, and more.
            </p>
            
            {/* Quick Stats */}
            <div className="flex flex-wrap justify-center items-center gap-8 mb-12 text-sm text-muted-foreground">
              <div className="flex items-center gap-2">
                <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
                <span>10+ Categories</span>
              </div>
              <div className="flex items-center gap-2">
                <div className="w-2 h-2 bg-blue-500 rounded-full animate-pulse delay-300"></div>
                <span>Comprehensive Answers</span>
              </div>
              <div className="flex items-center gap-2">
                <div className="w-2 h-2 bg-purple-500 rounded-full animate-pulse delay-700"></div>
                <span>Updated Regularly</span>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* CATEGORY FILTER */}
      <section className="py-8 bg-muted/30">
        <div className="container-custom">
          <div className="flex flex-wrap justify-center gap-3">
            <Button
              variant={selectedCategory === null ? "default" : "outline"}
              size="sm"
              onClick={() => setSelectedCategory(null)}
              className="transition-all duration-200"
            >
              All Questions
            </Button>
            {faqCategories.map((category) => {
              const Icon = category.icon;
              return (
                <Button
                  key={category.id}
                  variant={selectedCategory === category.id ? "default" : "outline"}
                  size="sm"
                  onClick={() => setSelectedCategory(category.id)}
                  className="transition-all duration-200"
                >
                  <Icon className="w-4 h-4 mr-2" />
                  {category.name}
                </Button>
              );
            })}
          </div>
        </div>
      </section>

      {/* FAQ CONTENT */}
      <section className="py-20">
        <div className="container-custom">
          <div className="max-w-4xl mx-auto">
            {filteredFAQs.map((faq, index) => {
              const category = faqCategories.find(cat => cat.id === faq.category);
              const Icon = category?.icon || FileText;
              const isExpanded = expandedItems.has(index.toString());
              
              return (
                <Card key={index} className="mb-6 hover:shadow-lg transition-all duration-300 border-l-4 border-l-primary/50">
                  <CardHeader 
                    className="cursor-pointer"
                    onClick={() => toggleExpanded(index.toString())}
                  >
                    <div className="flex items-center justify-between">
                      <div className="flex items-start space-x-4">
                        <div className={`w-10 h-10 ${category?.bgColor || 'bg-primary/10'} rounded-full flex items-center justify-center flex-shrink-0`}>
                          <Icon className={`w-5 h-5 ${category?.color || 'text-primary'}`} />
                        </div>
                        <div className="flex-1">
                          <CardTitle className="text-lg font-semibold text-foreground mb-2">
                            {faq.question}
                          </CardTitle>
                          <Badge variant="outline" className="text-xs">
                            {category?.name || 'General'}
                          </Badge>
                        </div>
                      </div>
                      <div className="ml-4">
                        {isExpanded ? (
                          <ChevronUp className="w-5 h-5 text-muted-foreground" />
                        ) : (
                          <ChevronDown className="w-5 h-5 text-muted-foreground" />
                        )}
                      </div>
                    </div>
                  </CardHeader>
                  
                  {isExpanded && (
                    <CardContent className="pt-0">
                      <Separator className="mb-4" />
                      <p className="text-muted-foreground leading-relaxed">
                        {faq.answer}
                      </p>
                    </CardContent>
                  )}
                </Card>
              );
            })}
          </div>
        </div>
      </section>

      {/* CTA SECTION */}
      <section className="py-20 bg-gradient-to-br from-primary/10 via-accent/5 to-primary/10 dark:from-primary/20 dark:via-accent/10 dark:to-primary/20">
        <div className="container-custom">
          <div className="text-center max-w-3xl mx-auto">
            <h2 className="text-3xl md:text-4xl font-bold mb-6">
              Still Have Questions?
            </h2>
            <p className="text-lg text-muted-foreground mb-8">
              Can't find what you're looking for? Our support team is here to help you get the most out of Clipizy.
            </p>
            
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button size="lg" asChild>
                <Link href="/contact">
                  <Users className="w-5 h-5 mr-2" />
                  Contact Support
                </Link>
              </Button>
              <Button size="lg" variant="outline" asChild>
                <Link href="/dashboard/create">
                  <Play className="w-5 h-5 mr-2" />
                  Start Creating
                  <ArrowRight className="w-5 h-5 ml-2" />
                </Link>
              </Button>
            </div>
          </div>
        </div>
      </section>
    </div>
  );
}
